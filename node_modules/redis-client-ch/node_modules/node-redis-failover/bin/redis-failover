#!/usr/bin/env node

var JSONC = require('json-comments');
var program = require('commander');
var fs = require('fs');
var version = require('../package.json').version;

//var Watcher = require('../lib/watcher_manager');
var cluster = require('../lib/cluster');
var logger = require('log4js');

function loadConfig(filename) {
  var content = fs.readFileSync(filename, 'utf8');
  var config = JSONC.parse(content);

  if (!config.zooKeeper) {
    throw new Error('zooKeeper can not be empty!');
  }

  if (!config.nodes) {
    throw new Error('error: redis nodes can not be empty!');
  }
  
  return config;
}

program
  .version(version)
  .usage('-c config.json')
  .option('-c, --config [path]', 'Path to JSON config file')
  .parse(process.argv);


if (!program.config) {
  throw new Error('command error: No config file!');
}

var config = loadConfig(program.config);

fs.watchFile(program.config, {interval: 15000}, function() {
  try {
    var conf = loadConfig(program.config);
  } catch (e) {
    logger.getLogger().error('reload config file error: ', e);
    return;
  }

  cluster.reset(conf);
});



if (config.log) {
  // if log is a dir path
  var logfile = config.log;
  if (logfile.match(/\/$/)) {
    logfile = logfile + 'redis-cluster-' + process.pid + '.log';
  }

  logger.configure({
    appenders: [
      {type: 'console'},
      {type: 'file', filename: logfile, maxLogSize: 300 * 1024 * 1024, backups: 1}
    ],
    replaceConsole: true
  });
}

if (config.pid) {
  fs.writeFileSync(config.pid, process.pid);
}

logger.getLogger().info('start options: ', config);

//new Watcher(opts);
cluster.setup(config);


// vim: set ft=javascript
